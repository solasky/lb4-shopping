/**
 * loopback4-example-shopping
 * LoopBack 4 Example: Online Shopping APIs
 *
 * The version of the OpenAPI document: 1.1.1
 * Contact: dev@loopback.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import InlineObject from './model/InlineObject';
import InlineObject1 from './model/InlineObject1';
import InlineResponse200 from './model/InlineResponse200';
import InlineResponse2001 from './model/InlineResponse2001';
import InlineResponse2002 from './model/InlineResponse2002';
import InlineResponse200Headers from './model/InlineResponse200Headers';
import KeyAndPassword from './model/KeyAndPassword';
import LoopbackCount from './model/LoopbackCount';
import NewProduct from './model/NewProduct';
import NewUser from './model/NewUser';
import NewUserRequest from './model/NewUserRequest';
import Order from './model/Order';
import OrderFilter from './model/OrderFilter';
import OrderIncludeFilterItems from './model/OrderIncludeFilterItems';
import OrderScopeFilter from './model/OrderScopeFilter';
import Product from './model/Product';
import ProductFilter from './model/ProductFilter';
import ProductPartial from './model/ProductPartial';
import ProductWithRelations from './model/ProductWithRelations';
import ResetPasswordInit from './model/ResetPasswordInit';
import ShoppingCart from './model/ShoppingCart';
import ShoppingCartItem from './model/ShoppingCartItem';
import User from './model/User';
import PingControllerApi from './api/PingControllerApi';
import ProductControllerApi from './api/ProductControllerApi';
import ShoppingCartControllerApi from './api/ShoppingCartControllerApi';
import UserManagementControllerApi from './api/UserManagementControllerApi';
import UserOrderControllerApi from './api/UserOrderControllerApi';


/**
* LoopBack_4_Example_Online_Shopping_APIs.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Loopback4ExampleShopping = require('index'); // See note below*.
* var xxxSvc = new Loopback4ExampleShopping.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Loopback4ExampleShopping.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Loopback4ExampleShopping.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Loopback4ExampleShopping.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.1.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The InlineObject model constructor.
     * @property {module:model/InlineObject}
     */
    InlineObject,

    /**
     * The InlineObject1 model constructor.
     * @property {module:model/InlineObject1}
     */
    InlineObject1,

    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200,

    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001,

    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002,

    /**
     * The InlineResponse200Headers model constructor.
     * @property {module:model/InlineResponse200Headers}
     */
    InlineResponse200Headers,

    /**
     * The KeyAndPassword model constructor.
     * @property {module:model/KeyAndPassword}
     */
    KeyAndPassword,

    /**
     * The LoopbackCount model constructor.
     * @property {module:model/LoopbackCount}
     */
    LoopbackCount,

    /**
     * The NewProduct model constructor.
     * @property {module:model/NewProduct}
     */
    NewProduct,

    /**
     * The NewUser model constructor.
     * @property {module:model/NewUser}
     */
    NewUser,

    /**
     * The NewUserRequest model constructor.
     * @property {module:model/NewUserRequest}
     */
    NewUserRequest,

    /**
     * The Order model constructor.
     * @property {module:model/Order}
     */
    Order,

    /**
     * The OrderFilter model constructor.
     * @property {module:model/OrderFilter}
     */
    OrderFilter,

    /**
     * The OrderIncludeFilterItems model constructor.
     * @property {module:model/OrderIncludeFilterItems}
     */
    OrderIncludeFilterItems,

    /**
     * The OrderScopeFilter model constructor.
     * @property {module:model/OrderScopeFilter}
     */
    OrderScopeFilter,

    /**
     * The Product model constructor.
     * @property {module:model/Product}
     */
    Product,

    /**
     * The ProductFilter model constructor.
     * @property {module:model/ProductFilter}
     */
    ProductFilter,

    /**
     * The ProductPartial model constructor.
     * @property {module:model/ProductPartial}
     */
    ProductPartial,

    /**
     * The ProductWithRelations model constructor.
     * @property {module:model/ProductWithRelations}
     */
    ProductWithRelations,

    /**
     * The ResetPasswordInit model constructor.
     * @property {module:model/ResetPasswordInit}
     */
    ResetPasswordInit,

    /**
     * The ShoppingCart model constructor.
     * @property {module:model/ShoppingCart}
     */
    ShoppingCart,

    /**
     * The ShoppingCartItem model constructor.
     * @property {module:model/ShoppingCartItem}
     */
    ShoppingCartItem,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
    * The PingControllerApi service constructor.
    * @property {module:api/PingControllerApi}
    */
    PingControllerApi,

    /**
    * The ProductControllerApi service constructor.
    * @property {module:api/ProductControllerApi}
    */
    ProductControllerApi,

    /**
    * The ShoppingCartControllerApi service constructor.
    * @property {module:api/ShoppingCartControllerApi}
    */
    ShoppingCartControllerApi,

    /**
    * The UserManagementControllerApi service constructor.
    * @property {module:api/UserManagementControllerApi}
    */
    UserManagementControllerApi,

    /**
    * The UserOrderControllerApi service constructor.
    * @property {module:api/UserOrderControllerApi}
    */
    UserOrderControllerApi
};
